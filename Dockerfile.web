FROM node:20-bullseye AS deps
WORKDIR /app
COPY package*.json ./
RUN npm ci --no-audit --no-fund

FROM node:20-bullseye AS builder
WORKDIR /app

# Pass in env variables for build-time (client-side)
ARG ROBOFLOW_API_KEY
ARG ROBOFLOW_WORKSPACE
ARG ROBOFLOW_WORKFLOW_ID
ARG CONFIDENCE_THRESHOLD
ARG USE_CACHE
ARG BLACK_BORDER_THRESHOLD
ARG NEXT_PUBLIC_FLASK_BASE_URL
ARG RAILWAY_DOCKERFILE_PATH

ENV ROBOFLOW_API_KEY=${ROBOFLOW_API_KEY}
ENV ROBOFLOW_WORKSPACE=${ROBOFLOW_WORKSPACE}
ENV ROBOFLOW_WORKFLOW_ID=${ROBOFLOW_WORKFLOW_ID}
ENV CONFIDENCE_THRESHOLD=${CONFIDENCE_THRESHOLD}
ENV USE_CACHE=${USE_CACHE}
ENV BLACK_BORDER_THRESHOLD=${BLACK_BORDER_THRESHOLD}
ENV NEXT_PUBLIC_FLASK_BASE_URL=${NEXT_PUBLIC_FLASK_BASE_URL}
ENV RAILWAY_DOCKERFILE_PATH=${RAILWAY_DOCKERFILE_PATH}

ENV NODE_ENV=production

COPY --from=deps /app/node_modules ./node_modules
COPY . .
RUN npm run build

FROM node:20-bullseye AS runner
WORKDIR /app
ENV NODE_ENV=production
ENV PORT=8080

# Runtime env vars (server-side)
ENV ROBOFLOW_API_KEY=${ROBOFLOW_API_KEY}
ENV ROBOFLOW_WORKSPACE=${ROBOFLOW_WORKSPACE}
ENV ROBOFLOW_WORKFLOW_ID=${ROBOFLOW_WORKFLOW_ID}
ENV CONFIDENCE_THRESHOLD=${CONFIDENCE_THRESHOLD}
ENV USE_CACHE=${USE_CACHE}
ENV BLACK_BORDER_THRESHOLD=${BLACK_BORDER_THRESHOLD}
ENV NEXT_PUBLIC_FLASK_BASE_URL=${NEXT_PUBLIC_FLASK_BASE_URL}
ENV RAILWAY_DOCKERFILE_PATH=${RAILWAY_DOCKERFILE_PATH}

COPY --from=builder /app/.next ./.next
COPY --from=builder /app/public ./public
COPY --from=builder /app/package*.json ./
COPY --from=builder /app/node_modules ./node_modules

EXPOSE 8080
CMD ["sh", "-c", "npm run start -- --port ${PORT:-8080} --hostname 0.0.0.0"]
